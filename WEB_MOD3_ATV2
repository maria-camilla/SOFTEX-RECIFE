const express = require('express')
const bodyParser = require('body-parser')
const app = express()
const port = 3000

app.use(bodyParser.json());

app.use(
  bodyParser.urlencoded({
    extended: true,
  })
)

const lista [];
___________________________________________________________________________

app.post('/produto/add', (req, res)=>{
    try{  
        let position = lista.length + 1; 
        let produto = request.body; 
        produto.id = position; 
        lista.push(produto);
        return response.status(201).json({
            Status: 'Produto registrado com sucesso!',
            Produto_add: produto
        });
    } catch(erro){
        return response.status(400).send(`Erro: ${erro}`);
    }
});

app.get('/produto', (req, res)=>{
    try{     
        if(lista.length == 0){
            return response.status(404).send('Sem registros deste produto!');
        } else{
            return response.status(200).json({
                Status: 'Produtos encontrados!',
                Produto_all: lista
            });
        }
    } catch(erro){
        return response.status(400).send(`Erro: ${erro}`);
    }
});

app.get('/produto/:position', (req, res)=>{
    try{
        let id = request.params.position;
        if(id > 0 && id <= lista.length){
            return response.status(200).json({
                Status: `Produto encontrado! | Registro: ${id}ª posição.`,
                Produto_id: lista[id-1]
            });
        } else if(id <= 0 || id > lista.length){
            return response.status(404).send('Produto não encontrado!');
        }
    } catch (erro){
        return response.status(400).send(`Erro: ${erro}`);
    }
});

app.delete('/produto/del/:position', (req, res)=>{
    try{
        let id = request.params.position; 
        if(id > 0 && id <= lista.length){
            lista.splice(id-1, 1);
            return response.status(200).json({
                Status: `Produto deletado com sucesso!`,
                Produto_all: lista
            });
        } else if(id <= 0 || id > lista.length){
            return response.status(404).send('produto não encontrado! Não foi possível exluir.');
        }
    } catch (erro){
        return response.status(400).send(`Erro: ${erro}`);
    }
});

app.all('*', (req, res)=>{
    return response.status(404).send('Página não encontrada!');
});

___________________________________________________________________________

app.listen(port, () => {
  console.log(`Servidor rodando na porta de conexão ${port}.`)
})
